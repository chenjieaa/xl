{"remainingRequest":"C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\src\\components\\testContainer.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\src\\components\\testContainer.vue","mtime":1541123760000},{"path":"C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\11\\VUEUI\\day02\\vue_cli\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      msg: \"脚手架\"\n    };\n  },\n  methods: {\n    show: function show() {\n      console.log(\"执行 show  方法 \");\n    }\n  },\n  beforeCreate: function beforeCreate() {//生命周期第一个函数,实例被创建'之前',会执行它\n    //注意:执行函数时 data和 methods还没有初始化\n    //console.log(this.msg);//undefined\n    //this.show();//报错\n  },\n  created: function created() {\n    //生命周期第二函数,实例被创建'之后'\n    //注意:执行函数时data和method初始化好了\n    //最早操作data和methods\n    this.show();\n    console.log(this.msg);\n  },\n  beforeMount: function beforeMount() {//生命周期第三个函数,模板己经在内存中编辑完成,\n    //但是尚未把模板渲染页面\n    //var h3 = document.getElementById(\"h3\");\n    //console.log(h3)   //报错误\n    //console.log(h3.innerText) //报错误\n  },\n  mounted: function mounted() {\n    //生命周期第四个函数,模板己经在内存中编辑完成,\n    //把模板渲染页面结束\n    //mounted 实例创建最后一个生命周期函数，\n    //当执行完 mounted表示实例己经完全创建好了\n    //如果没有其它的操作，静静躺内存中一动不动 \n    var h3 = document.getElementById(\"h3\");\n    console.log(\"4:\" + h3.innerText);\n  },\n  beforeUpdate: function beforeUpdate() {\n    //接下运行二个事件\n    //当执行beforeUpdate 页面中显示数据旧\n    //此时                    data数据新\n    console.log(\"5:内存中DATA变量:\" + this.msg);\n    var h3 = document.getElementById(\"h3\");\n    console.log(\"5:模板中数据:\" + h3.innerText);\n  },\n  updated: function updated() {\n    console.log(\"6:内存的Data:\" + this.msg);\n    var h3 = document.getElementById(\"h3\");\n    console.log(\"6:\" + h3.innerText);\n  }\n};",{"version":3,"sources":["testContainer.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AAAA,WAAA;AAAA,KAAA;AACA,GAHA;AAIA,WAAA;AACA,QADA,kBACA;AAAA,cAAA,GAAA,CAAA,cAAA;AAAA;AADA,GAJA;AAOA,cAPA,0BAOA,CACA;AACA;AACA;AACA;AACA,GAZA;AAaA,SAbA,qBAaA;AACA;AACA;AACA;AACA,SAAA,IAAA;AACA,YAAA,GAAA,CAAA,KAAA,GAAA;AACA,GAnBA;AAoBA,aApBA,yBAoBA,CACA;AACA;AACA;AACA;AACA;AACA,GA1BA;AA2BA,SA3BA,qBA2BA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,CAAA,OAAA,GAAA,SAAA;AACA,GAnCA;AAoCA,cApCA,0BAoCA;AACA;AACA;AACA;AACA,YAAA,GAAA,CAAA,iBAAA,KAAA,GAAA;AACA,QAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,CAAA,aAAA,GAAA,SAAA;AACA,GA3CA;AA4CA,SA5CA,qBA4CA;AACA,YAAA,GAAA,CAAA,eAAA,KAAA,GAAA;AACA,QAAA,KAAA,SAAA,cAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,CAAA,OAAA,GAAA,SAAA;AACA;AAhDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"app-testContainer\">\r\n     <h1>testContainer.vue</h1>\r\n     <h1>生命周期</h1>\r\n     <h1>当前vue 实例创建后自动触发事件</h1>\r\n     <h1>事件调用一些函数(钩子函数)</h1>\r\n<input type=\"button\" value=\"修改\" @click=\"msg='ok'\"/>\r\n     <p id=\"h3\">{{msg}}</p>\r\n  </div>\r\n</template>\r\n<script>\r\n   export default {    \r\n     data(){\r\n       return {msg:\"脚手架\"}\r\n     },\r\n     methods:{\r\n       show(){console.log(\"执行 show  方法 \")}\r\n     },\r\n     beforeCreate() {\r\n       //生命周期第一个函数,实例被创建'之前',会执行它\r\n       //注意:执行函数时 data和 methods还没有初始化\r\n       //console.log(this.msg);//undefined\r\n       //this.show();//报错\r\n     },\r\n     created() {\r\n       //生命周期第二函数,实例被创建'之后'\r\n       //注意:执行函数时data和method初始化好了\r\n       //最早操作data和methods\r\n       this.show();\r\n       console.log(this.msg);\r\n     },\r\n     beforeMount() {\r\n       //生命周期第三个函数,模板己经在内存中编辑完成,\r\n       //但是尚未把模板渲染页面\r\n       //var h3 = document.getElementById(\"h3\");\r\n       //console.log(h3)   //报错误\r\n       //console.log(h3.innerText) //报错误\r\n     },\r\n     mounted() {\r\n       //生命周期第四个函数,模板己经在内存中编辑完成,\r\n       //把模板渲染页面结束\r\n       //mounted 实例创建最后一个生命周期函数，\r\n       //当执行完 mounted表示实例己经完全创建好了\r\n       //如果没有其它的操作，静静躺内存中一动不动 \r\n       var h3 = document.getElementById(\"h3\");\r\n       console.log(\"4:\"+h3.innerText)\r\n     },\r\n     beforeUpdate() {\r\n       //接下运行二个事件\r\n       //当执行beforeUpdate 页面中显示数据旧\r\n       //此时                    data数据新\r\n       console.log(\"5:内存中DATA变量:\"+this.msg);\r\n       var h3 = document.getElementById(\"h3\");\r\n       console.log(\"5:模板中数据:\"+h3.innerText);\r\n     },\r\n     updated() {\r\n       console.log(\"6:内存的Data:\"+this.msg);\r\n       var h3 = document.getElementById(\"h3\");\r\n       console.log(\"6:\"+h3.innerText);\r\n     },\r\n   }\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src\\components"}]}